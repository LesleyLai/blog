---
import { type CollectionEntry } from "astro:content";

import { Icon } from "astro-icon/components";

import { Picture, Image } from "astro:assets";
import TagList from "./TagList.astro";

interface Props {
  projects: CollectionEntry<"projects">[];
}

const { projects } = Astro.props;

const currentYear = new Date().getFullYear();
---

<div class="projects-grid">
  {
    projects.map(async (project) => {
      const { Content } = await project.render();

      const createdYear = project.data.created.getFullYear();
      const modifiedYear = project.data.modified?.getFullYear();

      const image = project.data.image;

      return (
        <article class="project-card">
          <div class="project-image-container">
            {image ? (
              image.format === "gif" ? (
                <Image src={image} alt={project.data.name} class="project-image" />
              ) : (
                <Picture
                  src={image}
                  alt={project.data.name}
                  formats={["avif", "webp"]}
                  class="project-image"
                />
              )
            ) : (
              <div class="project-image-placeholder">
                <div class="project-image-placeholder-text">{project.data.name}</div>
              </div>
            )}
          </div>
          <div class="project-content">
            <header class="project-header">
              <h2 class="project-title">{project.data.name}</h2>
              <div class="project-links">
                {project.data.github && (
                  <a
                    href={project.data.github}
                    class="icon-link"
                    target="_blank"
                    rel="noopener noreferrer"
                    title="GitHub Repository"
                  >
                    <Icon name="mdi:github" size={16} title="GitHub Repository" />
                  </a>
                )}
                {project.data.demo && (
                  <a href={project.data.demo} class="icon-link" title="Live Demo">
                    <Icon name="mdi:web" size={16} title="Live Demo" />
                  </a>
                )}
              </div>
            </header>

            <span class="project-date">
              <time datetime={project.data.created.toISOString()}>{createdYear}</time>
              {modifiedYear && (
                <>
                  â€”{" "}
                  <time datetime={project.data.modified?.toISOString()}>
                    {modifiedYear == currentYear ? "Now" : modifiedYear}
                  </time>
                </>
              )}
            </span>

            <TagList type="project" tags={project.data.tags} />

            <div class="project-description">
              <Content />
            </div>
          </div>
        </article>
      );
    })
  }
</div>

<style>
  .projects-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-top: 1rem;
  }

  @media (min-width: 768px) {
    .projects-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .projects-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .project-card {
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    overflow: hidden;
    transition:
      box-shadow 0.3s ease,
      transform 0.3s ease;
    background: var(--content-bg-color);
  }

  .project-image-container {
    aspect-ratio: 16/9;
    overflow: hidden;
    background: var(--image-placeholder-bg-color);
  }

  .project-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .project-image-placeholder {
    width: 100%;
    height: 100%;
    background: var(--image-placeholder-bg-color);
    user-select: none;
  }

  .project-image-placeholder-text {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    color: var(--text-color);
    font-size: 2rem;
  }

  .project-content {
    padding: 1.25rem;
  }

  .project-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
  }

  .project-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    padding: 0;
    color: var(--text-color, #000);
  }

  .project-links {
    display: flex;
    gap: 0.5rem;
    flex-shrink: 0;
  }

  .icon-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    color: var(--secondary-color);
    border-radius: 0.375rem;
    transition:
      color 0.2s ease,
      background-color 0.2s ease;
  }

  .icon-link:hover {
    color: var(--text-color);
    background-color: rgba(0, 0, 0, 0.05);
  }

  .icon-link svg {
    width: 1.25rem;
    height: 1.25rem;
  }

  .project-date {
    display: block;
    color: var(--secondary-color);
    font-size: 0.875rem;
    margin-bottom: 0.25rem;
  }

  .project-description {
    color: var(--text-color);
    font-size: 0.9375rem;
    line-height: 1.6;
  }

  .project-description :global(p) {
    margin: 0;
  }

  .project-description :global(p + p) {
    margin-top: 0.75rem;
  }
</style>
