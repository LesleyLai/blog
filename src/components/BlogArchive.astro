---
// Displays blog posts in reverse chronological order
// Can filter to show only posts with a specific tag when provided

import "@styles/container.css";
import { translations } from "@i18n/translations";
import { getCurrentLanguage, transformSlug } from "@i18n/i18n";
import { BLOG_POSTS, POST_COUNT_BY_TAGS, sortByDate, type BlogPost } from "@content/blog";
import TagList from "@components/TagList.astro";

interface Props {
  tag?: string;
}

const { tag } = Astro.props;

const lang = getCurrentLanguage(Astro);

let posts = BLOG_POSTS.byLang(lang);
if (tag) {
  posts = posts.filter((post) => post.data.tags.includes(tag));
}

const postsByYear = (function () {
  const byYearMap: Map<number, BlogPost[]> = new Map();
  for (const post of posts) {
    const year = post.data.created.getFullYear();
    if (byYearMap.has(year)) {
      byYearMap.get(year)?.push(post);
    } else {
      byYearMap.set(year, [post]);
    }
  }

  const result: { year: number; posts: BlogPost[] }[] = [];
  for (const [year, posts] of byYearMap.entries()) {
    sortByDate(posts);
    result.push({ year, posts });
  }
  result.sort((lhs, rhs) => rhs.year - lhs.year); // inverse sort year
  return result;
})();

const options: Intl.DateTimeFormatOptions = {
  month: "long",
  day: "numeric",
};
const formatDate = (date: Date) => date.toLocaleDateString(lang, options);
---

<TagList tags={POST_COUNT_BY_TAGS} type="blogpost" showall={`/${lang}/blog`} />
<p class="filter-hint">
  {tag && translations[lang].blogPostsFilterHintTag(tag, posts.length)}
</p>
{
  postsByYear.map(({ year, posts }) => (
    <article>
      <h2 class="year">{year}</h2>
      <ul>
        {posts.map((post) => (
          <li>
            <a class="title" href={`/${transformSlug(post.id)}`} data-astro-prefetch>
              {post.data.title}{" "}
            </a>
            {post.untranslated && <span>{translations[lang].untranslated}</span>}
            <span>â€” {formatDate(post.data.created)}</span>
            <span class="tags">
              <TagList tags={post.data.tags} exclude={tag} type="blogpost" />
            </span>
          </li>
        ))}
      </ul>
    </article>
  ))
}

<style>
  .year {
    padding-bottom: 5px;
    border-bottom: 1px solid var(--divider-color);
    margin-bottom: 0.5rem;
  }

  .title {
    font-family: "PT Serif", "Noto Sans SC Variable", serif;
    color: var(--text-color);
  }

  .title:hover {
    color: var(--highlight-color);
  }

  .filter-hint {
    padding-bottom: 1rem;
    font-size: 16px;
  }

  .tags {
    display: inline-block;
  }

  li {
    margin-bottom: 5px;
  }
</style>
