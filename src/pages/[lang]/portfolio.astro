---
import PageLayout from "@layouts/PageLayout.astro";
import { translations, type TranslationKey } from "@i18n/translations";
import { type Language, languages } from "@i18n/i18n";
import { getCollection } from "astro:content";

import { Icon } from "astro-icon/components";

import { Picture, Image } from "astro:assets";

interface Params {
  params: {
    lang: Language;
  };
}

export function getStaticPaths(): Params[] {
  return languages.map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params;

const allProjects = (await getCollection("projects")).filter((project) => {
  return project.slug.endsWith(`/${lang}`);
});

// Sort projects by last modified date
const projects = allProjects.sort((a, b) => {
  const aDate = a.data.modified ?? a.data.created;
  const bDate = b.data.modified ?? b.data.created;

  return bDate.valueOf() - aDate.valueOf();
});

const translateTags = (lang: Language, tag: string): string => {
  if (tag in translations.en) {
    return translations[lang][tag as TranslationKey] as string;
  }
  throw Error(`Failed to translate tag: ${tag}`);
};

const currentYear = new Date().getFullYear();
---

<PageLayout title={translations[lang].portfolio}>
  <h1>{translations[lang].portfolio}</h1>
  <div class="portfolio-grid">
    {
      projects.map(async (project) => {
        const { Content } = await project.render();

        const createdYear = project.data.created.getFullYear();
        const modifiedYear = project.data.modified?.getFullYear();

        const image = project.data.image;

        return (
          <article class="project-card">
            <div class="project-image-container">
              {image ? (
                image.format === "gif" ? (
                  <Image src={image} alt={project.data.name} loading="lazy" class="project-image" />
                ) : (
                  <Picture
                    src={image}
                    alt={project.data.name}
                    formats={["avif", "webp"]}
                    loading="lazy"
                    class="project-image"
                  />
                )
              ) : (
                <div class="project-image-placeholder">
                  <div class="project-image-placeholder-text">{project.data.name}</div>
                </div>
              )}
            </div>
            <div class="project-content">
              <header class="project-header">
                <h2 class="project-title">{project.data.name}</h2>
                <div class="project-links">
                  {project.data.github && (
                    <a
                      href={project.data.github}
                      class="icon-link"
                      target="_blank"
                      rel="noopener noreferrer"
                      title="GitHub Repository"
                    >
                      <Icon name="mdi:github" size={16} title="GitHub Repository" />
                    </a>
                  )}
                  {project.data.demo && (
                    <a href={project.data.demo} class="icon-link" title="Live Demo">
                      <Icon name="mdi:web" size={16} title="Live Demo" />
                    </a>
                  )}
                </div>
              </header>

              <span class="project-date">
                <time datetime={project.data.created.toISOString()}>{createdYear}</time>
                {modifiedYear && (
                  <>
                    â€”{" "}
                    <time datetime={project.data.modified?.toISOString()}>
                      {modifiedYear == currentYear ? "Now" : modifiedYear}
                    </time>
                  </>
                )}
              </span>

              <div class="project-tags">
                <ul class="project-tag-list">
                  {project.data.tags.map((tag) => (
                    <li>
                      <a href="#">{translateTags(lang, tag)}</a>
                    </li>
                  ))}
                </ul>
              </div>
              <div class="project-description">
                <Content />
              </div>
            </div>
          </article>
        );
      })
    }
  </div>
</PageLayout>

<style>
  .portfolio-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-top: 2rem;
  }

  @media (min-width: 768px) {
    .portfolio-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .portfolio-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .project-card {
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    overflow: hidden;
    transition:
      box-shadow 0.3s ease,
      transform 0.3s ease;
    background: var(--content-bg-color);
  }

  .project-image-container {
    aspect-ratio: 16/9;
    overflow: hidden;
    background: var(--image-placeholder-bg-color);
  }

  .project-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .project-image-placeholder {
    width: 100%;
    height: 100%;
    background: var(--image-placeholder-bg-color);
    user-select: none;
  }

  .project-image-placeholder-text {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    color: var(--text-color);
    font-size: 2rem;
  }

  .project-content {
    padding: 1.25rem;
  }

  .project-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 0.75rem;
  }

  .project-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: var(--text-color, #000);
  }

  .project-links {
    display: flex;
    gap: 0.5rem;
    flex-shrink: 0;
  }

  .icon-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    color: var(--secondary-color);
    border-radius: 0.375rem;
    transition:
      color 0.2s ease,
      background-color 0.2s ease;
  }

  .icon-link:hover {
    color: var(--text-color);
    background-color: rgba(0, 0, 0, 0.05);
  }

  .icon-link svg {
    width: 1.25rem;
    height: 1.25rem;
  }

  .project-date {
    display: block;
    color: var(--secondary-color);
    font-size: 0.875rem;
    margin-bottom: 0.75rem;
  }

  .project-tags {
    margin-bottom: 1rem;
  }

  .project-tag-list {
    /* TODO: shouldn't need to reset list */
    list-style: none;
    margin: 0;

    display: flex;
    flex-wrap: wrap;
  }

  .project-tag-list li a {
    margin: 0.2em 0.5em 0.2em 0px;
    padding: 0.4em 0.5em;
    font-weight: 800;
    font-size: 12px;
    border-radius: 0.285714rem;

    color: #fff;
    background-color: var(--tag-color);
  }

  .project-tag-list li a:hover {
    background-color: var(--tag-highlight-color);
  }

  .project-description {
    color: var(--text-color);
    font-size: 0.9375rem;
    line-height: 1.6;
  }

  .project-description :global(p) {
    margin: 0;
  }

  .project-description :global(p + p) {
    margin-top: 0.75rem;
  }
</style>
